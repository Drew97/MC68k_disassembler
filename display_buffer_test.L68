00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.14.00
Created On: 2/23/2014 1:34:00 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9   
00001000                            10  *---------------------------- Add string to display buffer ---------------------------------------  
00001000  207C 00001048             11                          MOVEA.L    #DISPLAY_BUFFER, A0  ; Set address register A0 to refer to DISPLAY_BUFFER space
00001006  247C 00001054             12                          MOVEA.L    #MOVE_MESG,A2        ; Point the A2 register at the MOVE_MESG
0000100C                            13                        
0000100C  10DA                      14  DISP_BUFF_ADD           MOVE.B     (A2)+,(A0)+          ; move a char from MOVE_MESG and incrememnt addr registers so they point to the next char
0000100E  0C12 0000                 15                          CMPI.B     #0,(A2)              ; if reached the end of the string
00001012  6700 0004                 16                          BEQ        PRINT_DISP           ; jump to print
00001016  60F4                      17                          BRA        DISP_BUFF_ADD        ; else loop back to the beginning
00001018                            18  
00001018  43F9 00001048             19  PRINT_DISP              LEA         DISPLAY_BUFFER,A1    ; Print a bunch of newlines to blank the screen
0000101E  103C 000E                 20                          MOVE.B      #14,D0
00001022  4E4F                      21                          TRAP        #15
00001024                            22                      
00001024  32FC 0000                 23  CLR_DISP_BUFF           MOVE.W      #$0000,(A1)+  ; There's only five words worth of data in the display buffer
00001028  32FC 0000                 24                          MOVE.W      #$0000,(A1)+  ; It's easier just to paste this five times than make a loop
0000102C  32FC 0000                 25                          MOVE.W      #$0000,(A1)+
00001030  32FC 0000                 26                          MOVE.W      #$0000,(A1)+
00001034  32FC 0000                 27                          MOVE.W      #$0000,(A1)+    
00001038  32FC 0000                 28                          MOVE.W      #$0000,(A1)+     
0000103C                            29                          
0000103C                            30                          ; TODO: WHAT HAPPENS WHEN THE INSTRUCTION IS TOO LARGE FOR THE DISPLAY BUFFER?
0000103C                            31  
0000103C  43F9 00001054             32                          LEA         MOVE_MESG,A1    ; Print a bunch of newlines to blank the screen
00001042  103C 000E                 33                          MOVE.B      #14,D0
00001046  4E4F                      34                          TRAP        #15
00001048                            35  
00001048                            36  
00001048                            37  STOP
00001048                            38      
00001048                            39      
00001048                            40      
00001048                            41  * Put variables and constants here
00001048= 0000 0000 0000 0...       42  DISPLAY_BUFFER      DCB.W        6,0              ; initialize block to 6 words to give extra room because strings will be null terminated
00001054= 3132 3334 3536 3...       43  MOVE_MESG           DC          '12345678910111213141',LF,CR,0
0000106E  =0000000D                 44  CR                      EQU         $0D
0000106E  =0000000A                 45  LF                      EQU         $0A
0000106E                            46  
0000106E                            47      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CLR_DISP_BUFF       1024
CR                  D
DISPLAY_BUFFER      1048
DISP_BUFF_ADD       100C
LF                  A
MOVE_MESG           1054
PRINT_DISP          1018
START               1000
STOP                1048
